<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm sticky top-0 z-50">
        <div class="container mx-auto px-4">
            <div class="flex items-center justify-between h-16">
                <div class="flex items-center">
                    <h1 class="text-xl font-bold text-gray-800">Student Portal</h1>
                    <span class="ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-sm rounded-full">
                        <%= student.rollNumber %>
                    </span>
                </div>
                <div class="flex items-center gap-4">
                    <button onclick="showComplaintModal()" class="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        <i class="fas fa-plus mr-2"></i> New Complaint
                    </button>
                    <button onclick="showLeaveModal()" class="flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">
                        <i class="fas fa-calendar-plus mr-2"></i> Request Leave
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <div class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Personal Information Card -->
            <div class="bg-white rounded-xl shadow-sm p-6">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-xl font-semibold">Personal Information</h2>
                    <span class="text-sm px-3 py-1 bg-blue-100 text-blue-800 rounded-full">
                        Semester <%= student.semester %>
                    </span>
                </div>
                <div class="space-y-3">
                    <p class="flex justify-between">
                        <span class="text-gray-600">Name:</span>
                        <span class="font-medium"><%= student.name %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Course:</span>
                        <span class="font-medium"><%= student.course %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Room Number:</span>
                        <span class="font-medium"><%= student.roomId.roomNumber %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Contact:</span>
                        <span class="font-medium"><%= student.contact %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Parent Name:</span>
                        <span class="font-medium"><%= student.parentName %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Parent Contact:</span>
                        <span class="font-medium"><%= student.parentContact %></span>
                    </p>
                </div>
            </div>

            <!-- Fee Details Card -->
            <div class="bg-white rounded-xl shadow-sm p-6">
                <h2 class="text-xl font-semibold mb-4">Fee Details</h2>
                <div class="space-y-6">
                    <div class="bg-blue-50 rounded-lg p-4">
                        <div class="flex justify-between mb-2">
                            <span class="text-gray-600">Total Fee</span>
                            <span class="font-semibold">₹<%= student.feeDetails.totalFee.toLocaleString() %></span>
                        </div>
                    </div>
                    <div class="space-y-3">
                        <p class="flex justify-between">
                            <span class="text-gray-600">Paid Amount:</span>
                            <span class="font-medium text-green-600">₹<%= student.feeDetails.paidAmount.toLocaleString() %></span>
                        </p>
                        <p class="flex justify-between">
                            <span class="text-gray-600">Pending Amount:</span>
                            <span class="font-medium text-red-600">₹<%= student.feeDetails.pendingAmount.toLocaleString() %></span>
                        </p>
                        <% if (student.feeDetails.lastPaymentDate) { %>
                        <p class="flex justify-between">
                            <span class="text-gray-600">Last Payment:</span>
                            <span class="font-medium"><%= new Date(student.feeDetails.lastPaymentDate).toLocaleDateString() %></span>
                        </p>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Room Details Card -->
            <div class="bg-white rounded-xl shadow-sm p-6">
                <h2 class="text-xl font-semibold mb-4">Room Details</h2>
                <div class="space-y-3">
                    <p class="flex justify-between">
                        <span class="text-gray-600">Block:</span>
                        <span class="font-medium"><%= student.roomId.blockId.name %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Room Type:</span>
                        <span class="font-medium"><%= student.roomId.roomType %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Bathroom:</span>
                        <span class="font-medium capitalize"><%= student.roomId.bathroomType %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Occupancy:</span>
                        <span class="font-medium"><%= student.roomId.occupied %>/<%= student.roomId.roomType.split('-')[0] %></span>
                    </p>
                    <p class="flex justify-between">
                        <span class="text-gray-600">Warden:</span>
                        <span class="font-medium"><%= student.roomId.blockId.wardenName %></span>
                    </p>
                </div>
            </div>

            <!-- Complaints List -->
            <div class="lg:col-span-2 bg-white rounded-xl shadow-sm p-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-semibold">My Complaints</h2>
                    <% if (student.complaints.length > 0) { %>
                    <button onclick="deleteAllComplaints()" class="text-sm px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg">
                        Delete All
                    </button>
                    <% } %>
                </div>
                <div class="space-y-4">
                    <% if (student.complaints.length === 0) { %>
                        <p class="text-center text-gray-500 py-4">No complaints submitted yet</p>
                    <% } else { %>
                        <% student.complaints.forEach(complaint => { %>
                            <div class="p-4 rounded-lg bg-gray-50 border relative">
                                <button onclick="deleteComplaint('<%= complaint._id %>')" 
                                        class="absolute top-2 right-2 text-gray-400 hover:text-red-600">
                                    <i class="fas fa-trash"></i>
                                </button>
                                <div class="flex justify-between items-start mb-2">
                                    <span class="text-sm text-gray-500"><%= complaint.complaintId %></span>
                                    <span class="px-2 py-1 rounded-full text-xs 
                                        <%= complaint.status === 'resolved' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
                                        <%= complaint.status %>
                                    </span>
                                </div>
                                <p class="text-gray-700"><%= complaint.details %></p>
                                <p class="text-sm text-gray-500 mt-2">
                                    <%= new Date(complaint.date).toLocaleDateString() %>
                                </p>
                            </div>
                        <% }) %>
                    <% } %>
                </div>
            </div>

            <!-- Leave Requests List -->
            <div class="lg:col-span-1 bg-white rounded-xl shadow-sm p-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-semibold">Leave Requests</h2>
                    <% if (student.leaveRequests.length > 0) { %>
                    <button onclick="deleteAllLeaveRequests()" class="text-sm px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg">
                        Delete All
                    </button>
                    <% } %>
                </div>
                <div class="space-y-4">
                    <% if (student.leaveRequests.length === 0) { %>
                        <p class="text-center text-gray-500 py-4">No leave requests submitted yet</p>
                    <% } else { %>
                        <% student.leaveRequests.forEach(request => { %>
                            <div class="p-4 rounded-lg bg-gray-50 border relative">
                                <button onclick="deleteLeaveRequest('<%= request._id %>')" 
                                        class="absolute top-2 right-2 text-gray-400 hover:text-red-600">
                                    <i class="fas fa-trash"></i>
                                </button>
                                <div class="flex justify-between items-start mb-2">
                                    <span class="text-sm text-gray-500"><%= request.requestId %></span>
                                    <span class="px-2 py-1 rounded-full text-xs 
                                        <%= request.status === 'accepted' ? 'bg-green-100 text-green-800' : 
                                           request.status === 'rejected' ? 'bg-red-100 text-red-800' : 
                                           'bg-yellow-100 text-yellow-800' %>">
                                        <%= request.status %>
                                    </span>
                                </div>
                                <p class="text-gray-700"><%= request.reason %></p>
                                <p class="text-sm text-gray-500 mt-2">
                                    <%= new Date(request.date).toLocaleDateString() %>
                                </p>
                            </div>
                        <% }) %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- Complaint Modal -->
    <div id="complaintModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-xl shadow-lg max-w-md w-full mx-4">
            <div class="p-6 border-b">
                <h2 class="text-2xl font-bold">Submit Complaint</h2>
            </div>
            <form id="complaintForm" class="p-6">
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Complaint Details</label>
                        <textarea name="details" required
                                class="w-full px-4 py-2 rounded-lg border resize-none h-32"></textarea>
                    </div>
                </div>
                <div class="flex justify-end gap-3 mt-6">
                    <button type="button" onclick="hideComplaintModal()"
                            class="px-4 py-2 rounded-lg text-gray-700 hover:bg-gray-100">
                        Cancel
                    </button>
                    <button type="submit"
                            class="px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700">
                        Submit
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Leave Request Modal -->
    <div id="leaveModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-xl shadow-lg max-w-md w-full mx-4">
            <div class="p-6 border-b">
                <h2 class="text-2xl font-bold">Request Leave</h2>
            </div>
            <form id="leaveForm" class="p-6">
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Reason for Leave</label>
                        <textarea name="reason" required
                                class="w-full px-4 py-2 rounded-lg border resize-none h-32"></textarea>
                    </div>
                </div>
                <div class="flex justify-end gap-3 mt-6">
                    <button type="button" onclick="hideLeaveModal()"
                            class="px-4 py-2 rounded-lg text-gray-700 hover:bg-gray-100">
                        Cancel
                    </button>
                    <button type="submit"
                            class="px-4 py-2 rounded-lg bg-green-600 text-white hover:bg-green-700">
                        Submit
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        const studentId = '<%= student._id %>';

        // Modal functions
        function showComplaintModal() {
            document.getElementById('complaintModal').classList.remove('hidden');
            document.getElementById('complaintModal').classList.add('flex');
        }

        function hideComplaintModal() {
    document.getElementById('complaintModal').classList.add('hidden');
    document.getElementById('complaintModal').classList.remove('flex');
    document.getElementById('complaintForm').reset();
        }
        

        function showLeaveModal() {
            document.getElementById('leaveModal').classList.remove('hidden');
            document.getElementById('leaveModal').classList.add('flex');
        }

        function hideLeaveModal() {
            document.getElementById('leaveModal').classList.add('hidden');
            document.getElementById('leaveModal').classList.remove('flex');
            document.getElementById('leaveForm').reset();
        }

        // Delete functions
        async function deleteComplaint(complaintId) {
            if (!confirm('Are you sure you want to delete this complaint?')) return;
            
            try {
                const response = await fetch('/student/delete-complaint', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ studentId, complaintId }),
                });
                const result = await response.json();
                if (result.success) {
                    location.reload();
                } else {
                    alert('Failed to delete complaint: ' + result.message);
                }
            } catch (error) {
                alert('An error occurred while deleting the complaint');
            }
        }

        async function deleteLeaveRequest(requestId) {
            if (!confirm('Are you sure you want to delete this leave request?')) return;
            
            try {
                const response = await fetch('/student/delete-leave', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ studentId, requestId }),
                });
                const result = await response.json();
                if (result.success) {
                    location.reload();
                } else {
                    alert('Failed to delete leave request: ' + result.message);
                }
            } catch (error) {
                alert('An error occurred while deleting the leave request');
            }
        }

        async function deleteAllComplaints() {
            if (!confirm('Are you sure you want to delete all complaints? This action cannot be undone.')) return;
            
            try {
                const response = await fetch('/student/delete-all-complaints', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ studentId }),
                });
                const result = await response.json();
                if (result.success) {
                    location.reload();
                } else {
                    alert('Failed to delete complaints: ' + result.message);
                }
            } catch (error) {
                alert('An error occurred while deleting complaints');
            }
        }

        async function deleteAllLeaveRequests() {
            if (!confirm('Are you sure you want to delete all leave requests? This action cannot be undone.')) return;
            
            try {
                const response = await fetch('/student/delete-all-leaves', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ studentId }),
                });
                const result = await response.json();
                if (result.success) {
                    location.reload();
                } else {
                    alert('Failed to delete leave requests: ' + result.message);
                }
            } catch (error) {
                alert('An error occurred while deleting leave requests');
            }
        }

        // Form submissions
        document.getElementById('complaintForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const details = formData.get('details');
            try {
                const response = await fetch('/student/submit-complaint', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ studentId, details }),
                });
                const result = await response.json();
                if (result.success) {
                    hideComplaintModal();
                    location.reload();
                } else {
                    alert('Failed to submit complaint: ' + result.message);
                }
            } catch (error) {
                alert('An error occurred while submitting the complaint');
            }
        });

        document.getElementById('leaveForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const reason = formData.get('reason');
            try {
                const response = await fetch('/student/submit-leave', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ studentId, reason }),
                });
                const result = await response.json();
                if (result.success) {
                    hideLeaveModal();
                    location.reload();
                } else {
                    alert('Failed to submit leave request: ' + result.message);
                }
            } catch (error) {
                alert('An error occurred while submitting the leave request');
            }
        });
    </script>
</body>
</html>
            